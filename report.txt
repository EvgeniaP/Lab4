kill - принудительное завершение работы программы
Выполняя команду "kill", посылается сигнал системе, чтобы заставить ее завершить приложение. 
Всего можно использовать до 60 сигналов.

Можно просмотреть все сигналы с помощью команды:
	$ kill -l

	SIGTERM - этот сигнал запрашивает остановку работы процесса. Он может быть проигнорирован. 
Процессу дается время на корректное завершение, чтобы сохранить свое состояние или результаты работы и освободить ресурсы. 
	SIGKILL - этот сигнал заставляет процесс прекратить работу немедленно. 
Программа не может проигнорировать этот сигнал. Несохраненные результаты будут потеряны.

Синтаксис использования "kill":
	$ kill [сигнал или опция] PID

Сигнал по умолчанию (если он не задан) - SIGTERM. Если он не помогает, можно использовать:
	$ kill SIGKILL PID
	$ kill -9 PID			(флаг "-9" ссылается на сигнал SIGKILL)
	
Если вы не знаете точно PID приложения, запустите команду:
	$ ps ux		- Она выведет информацию по всем запущенным программам

Mожно завершать несколько процессов одной командой:
	$ kill -9 PID1 PID2 PID 3
	
	___***___
	
	wait, waitpid - ожидает завершения процесса  
	
	Функция wait приостанавливает выполнение текущего процесса до тех пор, 
	пока дочерний процесс не завершится, или до появления сигнала.
	Функция waitpid приостанавливает -//- , пока дочерний процесс, 
	указанный в параметре pid, не завершит выполнение, или пока не появится сигнал.
	Параметр pid может принимать несколько значений
	
	___***___
	
	POSIX определяет набор интерфейсов (функций заголовочных файлов) для программирования потоков.
	